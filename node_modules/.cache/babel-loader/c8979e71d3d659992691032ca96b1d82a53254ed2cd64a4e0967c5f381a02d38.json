{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\cobra\\\\take-care-guru\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport ReactMarkdown from 'react-markdown';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport Form from './components/Form';\nimport AnswerContainer from './components/AnswerContainer';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = \"AIzaSyBhuYRkdE9ULfxl3w0iDkrOLGkbt7_zUHc\"; // Your API key\n\nfunction App() {\n  _s();\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\n  const [showResults, setShowResults] = useState(false);\n  const generateAnswer = async e => {\n    e.preventDefault();\n    setGeneratingAnswer(true);\n    setAnswer(\"Loading Bhirava...  \\n I Will get You 300 Units of information in 10 seconds\");\n    setShowResults(false);\n    try {\n      const response = await axios.post(`https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${API_KEY}`, {\n        contents: [{\n          parts: [{\n            text: question\n          }]\n        }]\n      });\n      const generatedAnswer = response.data.candidates[0].content.parts[0].text;\n      setAnswer(generatedAnswer);\n      setQuestion(\"\");\n      setShowResults(true);\n    } catch (error) {\n      console.error(error);\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\n    }\n    setGeneratingAnswer(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main-container\",\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      question: question,\n      setQuestion: setQuestion,\n      generateAnswer: generateAnswer,\n      generatingAnswer: generatingAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), generatingAnswer && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 flex justify-center items-center bg-gray-800 bg-opacity-30\",\n      children: /*#__PURE__*/_jsxDEV(ClipLoader, {\n        size: 50,\n        color: \"#fff\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), showResults && /*#__PURE__*/_jsxDEV(AnswerContainer, {\n      answer: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XrSAATl/APdOmG2cgBBQ9hXRGqs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","ReactMarkdown","ClipLoader","Form","AnswerContainer","jsxDEV","_jsxDEV","API_KEY","App","_s","question","setQuestion","answer","setAnswer","generatingAnswer","setGeneratingAnswer","showResults","setShowResults","generateAnswer","e","preventDefault","response","post","contents","parts","text","generatedAnswer","data","candidates","content","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","size","color","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/cobra/take-care-guru/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport ClipLoader from 'react-spinners/ClipLoader';\r\nimport Form from './components/Form';\r\nimport AnswerContainer from './components/AnswerContainer';\r\nimport './styles.css';\r\n\r\nconst API_KEY = \"AIzaSyBhuYRkdE9ULfxl3w0iDkrOLGkbt7_zUHc\"; // Your API key\r\n\r\nfunction App() {\r\n  const [question, setQuestion] = useState(\"\");\r\n  const [answer, setAnswer] = useState(\"\");\r\n  const [generatingAnswer, setGeneratingAnswer] = useState(false);\r\n  const [showResults, setShowResults] = useState(false);\r\n\r\n  const generateAnswer = async (e) => {\r\n    e.preventDefault();\r\n    setGeneratingAnswer(true);\r\n    setAnswer(\"Loading Bhirava...  \\n I Will get You 300 Units of information in 10 seconds\");\r\n    setShowResults(false);\r\n    try {\r\n      const response = await axios.post(\r\n        `https://generativelanguage.googleapis.com/v1beta/models/gemini-pro:generateContent?key=${API_KEY}`,\r\n        {\r\n          contents: [{ parts: [{ text: question }] }],\r\n        }\r\n      );\r\n      const generatedAnswer = response.data.candidates[0].content.parts[0].text;\r\n      setAnswer(generatedAnswer);\r\n      setQuestion(\"\");\r\n      setShowResults(true);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setAnswer(\"Sorry - Something went wrong. Please try again!\");\r\n    }\r\n    setGeneratingAnswer(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"main-container\">\r\n      <Form \r\n        question={question}\r\n        setQuestion={setQuestion}\r\n        generateAnswer={generateAnswer}\r\n        generatingAnswer={generatingAnswer}\r\n      />\r\n      {generatingAnswer && (\r\n        <div className=\"fixed inset-0 flex justify-center items-center bg-gray-800 bg-opacity-30\">\r\n          <ClipLoader size={50} color={\"#fff\"} />\r\n        </div>\r\n      )}\r\n      {showResults && (\r\n        <AnswerContainer answer={answer} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}